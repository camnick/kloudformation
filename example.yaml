apiVersion: ecc.aws.gotopple.com/v1alpha1
kind: AuthorizeEC2SecurityGroupIngress
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: authorizeec2securitygroupingress-sample
spec:
  ruleName: testrule
  sourceCidrIp: 0.0.0.0/0
  ec2SecurityGroupName: ec2securitygroup-sample
  fromPort: 22
  toPort: 22
  ipProtocol: tcp
---
apiVersion: ecc.aws.gotopple.com/v1alpha1
kind: EC2Instance
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: sample-ec2-instance
spec:
  imageId: ami-6cd6f714 #Amazon Linux
  instanceType: t2.micro
  subnetName: example-network-public-a
  userData: '#!/usr/bin/env bash
            touch /home/ec2-user/test.txt'
  ec2KeyPair: ec2keypair-sample
  ec2SecurityGroupName: ec2securitygroup-sample
  tags:
    - key: Name
      value: "Test Instance"
---
apiVersion: ecc.aws.gotopple.com/v1alpha1
kind: EC2KeyPair
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: ec2keypair-sample
spec:
  ec2KeyPairName: sample-keypair
---
apiVersion: ecc.aws.gotopple.com/v1alpha1
kind: EC2SecurityGroup
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: ec2securitygroup-sample
spec:
  ec2SecurityGroupName: sample-securitygroup
  vpcName: example-network
  description: an aws ec2 security group
  tags:
    - key: Name
      value: sample-ec2-securitygroup
---
apiVersion: ecc.aws.gotopple.com/v1alpha1
kind: EC2VolumeAttachment
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: ec2volumeattachment-sample
spec:
  devicePath: /dev/xvdb
  volumeName: volume-sample
  ec2InstanceName: sample-ec2-instance
---
apiVersion: ecc.aws.gotopple.com/v1alpha1
kind: EIP
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: eip-sample
spec:
  vpcName: example-network
  tags:
    - key: Name
      value: BrandNewIP
---
apiVersion: ecc.aws.gotopple.com/v1alpha1
kind: EIP
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: eip-sample-for-ec2
spec:
  vpcName: example-network
  tags:
    - key: Name
      value: BrandNewIPforEC2
---
apiVersion: ecc.aws.gotopple.com/v1alpha1
kind: EIP
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: eip-sample-for-nat
spec:
  vpcName: example-network
  tags:
    - key: Name
      value: BrandNewIPforNAT
---
apiVersion: ecc.aws.gotopple.com/v1alpha1
kind: EIPAssociation
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: eipassociation-sample
spec:
  allocationName: eip-sample
  ec2InstanceName: sample-ec2-instance
---
apiVersion: ecc.aws.gotopple.com/v1alpha1
kind: InternetGateway
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: internetgateway-sample
spec:
  tags:
    - key: Name
      value: SampleInternetGateway
  vpcName: example-network
---
apiVersion: ecc.aws.gotopple.com/v1alpha1
kind: InternetGatewayAttachment
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: internetgatewayattachment-sample
spec:
  vpcName: example-network
  internetGatewayName: internetgateway-sample
---
apiVersion: ecc.aws.gotopple.com/v1alpha1
kind: NATGateway
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: natgateway-sample
spec:
  subnetName: example-network-public-a
  eipAllocationName: eip-sample-for-nat
  tags:
    - key: Name
      value: Amazing-NAT-Gateway
---
apiVersion: ecc.aws.gotopple.com/v1alpha1
kind: Route
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: route-sample
spec:
  destinationCidrBlock: "0.0.0.0/0"
  routeTableName: routetable-sample
  gatewayName: internetgateway-sample
---
apiVersion: ecc.aws.gotopple.com/v1alpha1
kind: RouteTable
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: routetable-sample
spec:
  vpcName: example-network
  tags:
    - key: sample-key
      value: sample-value
    - key: Name
      value: SampleRouteTable
---
apiVersion: ecc.aws.gotopple.com/v1alpha1
kind: RouteTableAssociation
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: routetableassociation-sample
spec:
  subnetName: example-network-public-a
  routeTableName: routetable-sample
---
apiVersion: ecc.aws.gotopple.com/v1alpha1
kind: Subnet
metadata:
  name: example-network-public-a
spec:
  vpcName: example-network
  availabilityZone: "us-west-2a"
  cidrBlock: "10.20.110.0/24"
  tags:
   - key: Name
     value: public-a
---
apiVersion: ecc.aws.gotopple.com/v1alpha1
kind: Volume
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: volume-sample
spec:
  availabilityZone: us-west-2a
  size: 8
  volumeType: gp2
  tags:
    - key: Name
      value: sample-volume
---
apiVersion: ecc.aws.gotopple.com/v1alpha1
kind: VPC
metadata:
  name: example-network
spec:
  cidrBlock: "10.20.0.0/16"
  enableDnsSupport: true
  enableDnsHostnames: true
  instanceTenancy: default
  tags:
    - key: Name
      value: my-super-vpc2
---
apiVersion: iam.aws.gotopple.com/v1alpha1
kind: AddRoleToInstanceProfile
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: addroletoinstanceprofile-sample
spec:
  iamInstanceProfileName: iaminstanceprofile-sample
  iamRoleName: role-sample
---
apiVersion: iam.aws.gotopple.com/v1alpha1
kind: IAMAttachRolePolicy
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: iamattachrolepolicy-sample
spec:
  iamPolicyName: iampolicy-sample
  iamRoleName: role-sample
---
apiVersion: iam.aws.gotopple.com/v1alpha1
kind: IAMInstanceProfile
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: iaminstanceprofile-sample
spec:
  instanceProfileName: "sample-instanceprofile"
  path: "/"
---
apiVersion: iam.aws.gotopple.com/v1alpha1
kind: IAMPolicy
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: iampolicy-sample
spec:
  description: "A happy little description"
  path: "/"
  policyDocument: '{
    "Version" : "2012-10-17",
    "Statement" : [
      {
        "Effect" : "Allow",
        "Action" : "ec2:DescribeInstances",
        "Resource" : "*"
      }
    ]
  }'
  policyName: "EC2AccessToMetaData"
---
apiVersion: iam.aws.gotopple.com/v1alpha1
kind: Role
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: role-sample
spec:
  assumeRolePolicyDocument: '{
    "Version" : "2012-10-17",
    "Statement" : [ {
      "Effect" : "Allow",
      "Principal" : {
        "Service" : [ "ec2.amazonaws.com" ]
      },
      "Action" : [ "sts:AssumeRole" ]
    } ]
  }'
  description: "This is a test role for Kloudformation"
  maxSessionDuration: 3600
  path: /testRoles/
  roleName: TestRoleName
---
apiVersion: swarm.aws.gotopple.com/v1alpha1
kind: DockerSwarm
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: dockerswarm-sample
spec:
  numManagers: 3
  numWorkers: 5
  managerSize: t2.micro
  workerSize: t2.micro
---
apiVersion: test.aws.gotopple.com/v1alpha1
kind: Test
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: test-sample
spec:
  # Add fields here
  foo: bar
---
